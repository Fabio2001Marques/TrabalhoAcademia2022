/**
 * @description       : 
 * @author            : Fábio Marques
 * @group             : 
 * @last modified on  : 13-07-2022
 * @last modified by  : Fábio Marques
**/
@isTest
public class TestWarSupTrigger {
    @TestSetup
    static void makeData(){
        TestDataFactory.createWarSup(5);
    }

    @isTest
    static void insertWarSupTriggerTest(){
        
        List<Supply__c> supplies = [Select id, Name, Quantity__c From Supply__c];
        List<Warship__c> warships = [Select id, Name From Warship__c];
        List<Warship_Supply__c> ws = [Select id From Warship_Supply__c];
        delete ws;

        List<Warship_Supply__c> warshipSuplly = new List<Warship_Supply__c>();

        for (Warship__c w : warships) {
            for (Integer i = 0; i < 5; i++) {
                Warship_Supply__c warSup = new Warship_Supply__c();
                warSup.Ship_supply__c = w.Id;
                warSup.Supply__c = supplies[i].Id;
                warSup.Quantity__c = i;                                     
                if (i== 1) {                   
                    warSup.Supply__c = supplies[i-1].Id;
                }if (i == 2) {
                    warSup.Quantity__c = 1000;  
                }
                warshipSuplly.add(warSup);
            }
        }
        try {
            insert warshipSuplly;
            
        } catch (Exception e ) {
            Boolean expectedExceptionThrown =  e.getMessage().contains('Quantity must be greater than zero') ? true : false;
            if (expectedExceptionThrown == false) {
                expectedExceptionThrown =  e.getMessage().contains('There are not enough supplies.') ? true : false;
            }
            System.AssertEquals(expectedExceptionThrown, true);
        }

        Warship_Supply__c warSup = new Warship_Supply__c();
        warSup.Ship_supply__c = warships[0].Id;
        warSup.Supply__c = supplies[0].Id;
        warSup.Quantity__c = 1;

        insert warSup;

        Warship_Supply__c warSup2 = new Warship_Supply__c();
        warSup2.Ship_supply__c = warships[0].Id;
        warSup2.Supply__c = supplies[0].Id;
        warSup2.Quantity__c = 1;

        try {
            insert warSup2;
            
        } catch (Exception e ) {
            Boolean expectedExceptionThrown =  e.getMessage().contains('This suplly already exists in this Warship.') ? true : false;
            System.AssertEquals(expectedExceptionThrown, true);
        }

    }

}